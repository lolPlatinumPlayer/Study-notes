-----------------------------------
   
              webstorm


・ 用npm在项目中本地安装babel之类文件数量比较多的模块（包）时，要在设置中把node_modules文件夹Excluded（排除）掉，禁止他索引，不然索引时间会非常长

-----------------------------------

               命令行


- 绝对路径中盘符写法示例：  
  `C:/`
- 开启软件的示例：  
  `start "绝对地址"`  
  （开ie时路径写到文件夹和写到exe的效果一致）  
- **开启浏览器**  
  除了上方内容外还要写：  
  ` 网址`
- 进入状态后，可连按两次ctrl+c来退出当前状态

------------------------------------

          babel简要使用步骤


1、md node_modules，把node_modules exclude掉
2、
npm init -y
cnpm install --save-dev babel-cli
type nul>.babelrc

------------------------------------

                 babel



・ .babel文件API
http://babeljs.io/docs/usage/api/#options


・ babel-cli的API
https://babeljs.io/docs/usage/cli/


（记录）一次使用babel+webpack中发现有变量不声明时，chrome会报错且js无法运行


・ 对项目本地安装babel-cli的情况下
配置package.json文件的scripts项可以在命令行中运行babel，如配置：
"scripts": {
    "a": "babel src -d li1b" 
  }
运行该命令(npm run a)的时候就会在命令行执行babel src -d li1b
效果等同于（全局安装babel-cli后）直接运行babel src -d li1b


・ 支持指定部分浏览器的例子
{
	"presets": [[
		"env",
		{
			"targets": {//这个targets也可以用npm包browserslist来代替
				"browsers": ["last 2 versions", "ie >= 9"]//该行使用browserslist语法
				//该语法详见https://github.com/ai/browserslist#queries
			},
			"modules": false /* ,
			"loose": true //为此预设中的任何允许它们的插件启用“宽松”转换（默认情况下禁用）。【没用过】
			*/
		}
	]],
	"plugins": ["transform-object-rest-spread"]//支持“对象扩展符”的插件
}


・ babel-polyfill
（详见：https://www.jianshu.com/p/3b27dfc6785c）
babel虽然转译ES语法，但是ES除了语法还有API（或者叫全局对象、或者叫built-ins）
要想转译这些API则需要babel-polyfill（或者babel-runtime&babel-plugin-tranform-runtime，不过一般不选择这个方案）
使用方法：
1. 本地--save安装（官方说明要--save而不是--save-dev）
2. webpack的module.exports中的entry写为['babel-polyfill','./src/main.js']
   （不用webpack的话也有其他使用方法）


-----------------------------------------------

        css自动兼容处理=autoprefixer
				

要用autoprefixer先要装另外3个npm包：postcss、postcss-loader、browserslist
装好后还要进行配置：
1. 新建文件“postcss.config.js”，文件里写：
   module.exports = {
	   plugins: [
		   require('autoprefixer')
	   ]
   }
2. 修改“webpack.config.js”
    1. 顶端var部分末尾加上
	   `var autoprefixer = require('autoprefixer');`
	2. module.exports的module的rules的“less”子项和“css”子项的use子项或loader子项最末尾加上"postcss-loader"
3. 在package.json中配置browserslist,例子如下：
   `
	{
		"name": "inputprojectnamehere",

		...


		"dependencies": {
			...
		},
		"devDependencies": {
			...
		},
		"browserslist": [
			"last 2 versions",
			"ie >= 9"
		]
	}

   `

